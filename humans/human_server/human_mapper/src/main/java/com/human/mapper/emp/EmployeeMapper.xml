<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.human.mapper.emp.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.human.pojo.emp.Employee" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="CHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="idCard" property="idCard" jdbcType="CHAR" />
    <result column="wedlock" property="wedlock" jdbcType="CHAR" />
    <result column="nationId" property="nationId" jdbcType="INTEGER" />
    <result column="nativePlace" property="nativePlace" jdbcType="VARCHAR" />
    <result column="politicId" property="politicId" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="departmentId" property="departmentId" jdbcType="INTEGER" />
    <result column="jobLevelId" property="jobLevelId" jdbcType="INTEGER" />
    <result column="posId" property="posId" jdbcType="INTEGER" />
    <result column="engageForm" property="engageForm" jdbcType="VARCHAR" />
    <result column="tiptopDegree" property="tiptopDegree" jdbcType="CHAR" />
    <result column="specialty" property="specialty" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="beginDate" property="beginDate" jdbcType="DATE" />
    <result column="workState" property="workState" jdbcType="CHAR" />
    <result column="workID" property="workID" jdbcType="CHAR" />
    <result column="contractTerm" property="contractTerm" jdbcType="DOUBLE" />
    <result column="conversionTime" property="conversionTime" jdbcType="DATE" />
    <result column="notWorkDate" property="notWorkDate" jdbcType="DATE" />
    <result column="beginContract" property="beginContract" jdbcType="DATE" />
    <result column="endContract" property="endContract" jdbcType="DATE" />
    <result column="workAge" property="workAge" jdbcType="INTEGER" />
    <result column="imgUrl" property="imgUrl" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId, email, 
    phone, address, departmentId, jobLevelId, posId, engageForm, tiptopDegree, specialty, 
    school, beginDate, workState, workID, contractTerm, conversionTime, notWorkDate, 
    beginContract, endContract, workAge, imgUrl
  </sql>

  <!--查询职工总记录数-->
  <select id="getEmployeeTotal" resultType="java.lang.Long">
    select count(*) from employee e
    <where>
        <if test="emp != null">
          <if test="emp.name != null and emp.name != ''">
            and e.name like concat('%',#{emp.name},'%')
          </if>
          <if test="emp.posId != null">
            and e.posId = #{emp.posId}
          </if>
          <if test="emp.jobLevelId != null">
            and e.jobLevelId = #{emp.jobLevelId}
          </if>
          <if test="emp.nationId != null">
            and e.nationId = #{emp.nationId}
          </if>
          <if test="emp.politicId != null">
            and e.politicId = #{emp.politicId}
          </if>
          <if test="emp.departmentId != null">
            and e.departmentId = #{emp.departmentId}
          </if>
          <if test="emp.engageForm != null and emp.engageForm != ''">
            and e.engageForm = #{emp.engageForm}
          </if>
        </if>
      <if test="beginDateScope != null">
        and e.beginDate between #{beginDateScope[0]} and #{beginDateScope[1]}
      </if>
    </where>
  </select>

  <!--获取最大工号-->
  <select id="getMaxWorkId" resultType="java.lang.Integer">
    select max(workID) from employee
  </select>

  <!--用户名密码获取-->
  <select id="getEmployeeByPhoneAndPassword" resultMap="empPageList">
    select e.*,n.id as nid,n.`name` as nname,p.id as pid,p.`name` as pname,d.id as did,d.name as dname,
    j.id as jid,j.`name` as jname,po.id as poid,po.name as poname
    FROM employee e,nation n,politicsstatus p,department d,joblevel j,position po
    WHERE e.nationId = n.id and e.politicId = p.id and e.departmentId = d.id
    and e.jobLevelId = j.id and e.posId = po.id and e.phone = #{phone}
    and e.password = #{password}
  </select>

  <!--分页查询职工数据-->
  <select id="getEmployeePageList" resultMap="empPageList">
    select e.*,n.id as nid,n.`name` as nname,p.id as pid,p.`name` as pname,d.id as did,d.name as dname,
    j.id as jid,j.`name` as jname,po.id as poid,po.name as poname
    FROM employee e,nation n,politicsstatus p,department d,joblevel j,position po
    WHERE e.nationId = n.id and e.politicId = p.id and e.departmentId = d.id
    and e.jobLevelId = j.id and e.posId = po.id
    <if test="emp != null">
      <if test="emp.name != null and emp.name != ''">
        and e.name like concat('%',#{emp.name},'%')
      </if>
      <if test="emp.posId != null">
        and e.posId = #{emp.posId}
      </if>
      <if test="emp.jobLevelId != null">
        and e.jobLevelId = #{emp.jobLevelId}
      </if>
      <if test="emp.nationId != null">
        and e.nationId = #{emp.nationId}
      </if>
      <if test="emp.politicId != null">
        and e.politicId = #{emp.politicId}
      </if>
      <if test="emp.departmentId != null">
        and e.departmentId = #{emp.departmentId}
      </if>
      <if test="emp.engageForm != null and emp.engageForm != ''">
        and e.engageForm = #{emp.engageForm}
      </if>
      <if test="emp.workID != null and emp.workID != ''">
        or e.workID = #{emp.workID}
      </if>
    </if>
    <if test="beginDateScope != null">
      and e.beginDate between #{beginDateScope[0]} and #{beginDateScope[1]}
    </if>

    ORDER BY e.id
    <if test="page != null and size != null">
        limit #{page},#{size}
    </if>
  </select>
  <resultMap id="empPageList" type="com.human.pojo.emp.Employee" extends="BaseResultMap">
    <association property="nation" javaType="com.human.pojo.Nation">
      <id column="nid" property="id"/>
      <result column="nname" property="name"/>
    </association>
    <association property="politicsstatus" javaType="com.human.pojo.Politicsstatus">
      <id column="pid" property="id"/>
      <result column="pname" property="name"/>
    </association>
    <association property="department" javaType="com.human.pojo.Department">
      <id column="did" property="id"/>
      <result column="dname" property="name"/>
    </association>
    <association property="jobLevel" javaType="com.human.pojo.JobLevel">
      <id column="jid" property="id"/>
      <result column="jname" property="name"/>
    </association>
    <association property="position" javaType="com.human.pojo.Position">
      <id column="poid" property="id"/>
      <result column="poname" property="name"/>
    </association>
  </resultMap>

  <!--根据id查询职工-->
  <select id="getEmployeeById" resultMap="empPageList">
    select e.*,n.id as nid,n.`name` as nname,p.id as pid,p.`name` as pname,d.id as did,d.name as dname,
    j.id as jid,j.`name` as jname,po.id as poid,po.name as poname
    FROM employee e,nation n,politicsstatus p,department d,joblevel j,position po
    WHERE e.nationId = n.id and e.politicId = p.id and e.departmentId = d.id
    and e.jobLevelId = j.id and e.posId = po.id and e.id = #{id}
  </select>

  <!--分页查询职工薪资账套-->
  <select id="getEmployeePageWithSalary" resultMap="PageWithSalary">
    SELECT e.*,s.id as sid,s.basicSalary,s.bonus,s.lunchSalary,s.trafficSalary,
    s.allSalary,s.pensionBase,s.pensionPer,s.createDate,s.medicalBase,s.medicalPer,
    s.accumulationFundBase,s.accumulationFundPer,s.`name` as sname,
    d.id as did,d.name as dname
    from employee e LEFT JOIN empsalary es on e.id = es.eid
    LEFT JOIN salary s on es.sid = s.id
    LEFT JOIN department d on e.departmentId = d.id
    <where>
      <if test="name != null and name != ''">
        and e.name like concat('%', #{name}, '%')
      </if>
    </where>
    ORDER BY e.id
    <if test="page != null and size != null">
      limit #{page},#{size}
    </if>
  </select>
  <resultMap id="PageWithSalary" type="com.human.pojo.emp.Employee" extends="BaseResultMap">
    <association property="salary" javaType="com.human.pojo.salary.Salary">
      <id column="sid" property="id" jdbcType="INTEGER" />
      <result column="basicSalary" property="basicSalary" jdbcType="INTEGER" />
      <result column="bonus" property="bonus" jdbcType="INTEGER" />
      <result column="lunchSalary" property="lunchSalary" jdbcType="INTEGER" />
      <result column="trafficSalary" property="trafficSalary" jdbcType="INTEGER" />
      <result column="allSalary" property="allSalary" jdbcType="INTEGER" />
      <result column="pensionBase" property="pensionBase" jdbcType="INTEGER" />
      <result column="pensionPer" property="pensionPer" jdbcType="REAL" />
      <result column="createDate" property="createDate" jdbcType="TIMESTAMP" />
      <result column="medicalBase" property="medicalBase" jdbcType="INTEGER" />
      <result column="medicalPer" property="medicalPer" jdbcType="REAL" />
      <result column="accumulationFundBase" property="accumulationFundBase" jdbcType="INTEGER" />
      <result column="accumulationFundPer" property="accumulationFundPer" jdbcType="REAL" />
      <result column="sname" property="name" jdbcType="VARCHAR" />
    </association>
    <association property="department" javaType="com.human.pojo.Department">
      <id column="did" property="id" jdbcType="INTEGER" />
      <result column="dname" property="name" jdbcType="VARCHAR" />
    </association>
  </resultMap>

  <!--更新职工账套-->
  <insert id="updateEmployeeSalaryById">
    REPLACE INTO empsalary (eid,sid) VALUES(#{eid},#{sid})
  </insert>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByPassword" resultType="com.human.pojo.emp.Employee" parameterType="java.lang.Integer" >
    select id,password
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <!--插入多条职工数据-->
  <insert id="insertEmployeeList">
    insert into employee (name, gender, birthday, idCard, wedlock, nationId,
      nativePlace, politicId, email, phone, address, departmentId,
      jobLevelId, posId, engageForm, tiptopDegree, specialty, school,
      beginDate, workState, workID, contractTerm, conversionTime, notWorkDate,
      beginContract, endContract, workAge
      ) values
      <foreach collection="employeeList" separator="," item="emp">
        (#{emp.name,jdbcType=VARCHAR}, #{emp.gender,jdbcType=CHAR},
        #{emp.birthday,jdbcType=DATE}, #{emp.idCard,jdbcType=CHAR}, #{emp.wedlock,jdbcType=CHAR}, #{emp.nationId,jdbcType=INTEGER},
        #{emp.nativePlace,jdbcType=VARCHAR}, #{emp.politicId,jdbcType=INTEGER}, #{emp.email,jdbcType=VARCHAR},
        #{emp.phone,jdbcType=VARCHAR}, #{emp.address,jdbcType=VARCHAR}, #{emp.departmentId,jdbcType=INTEGER},
        #{emp.jobLevelId,jdbcType=INTEGER}, #{emp.posId,jdbcType=INTEGER}, #{emp.engageForm,jdbcType=VARCHAR},
        #{emp.tiptopDegree,jdbcType=CHAR}, #{emp.specialty,jdbcType=VARCHAR}, #{emp.school,jdbcType=VARCHAR},
        #{emp.beginDate,jdbcType=DATE}, #{emp.workState,jdbcType=CHAR}, #{emp.workID,jdbcType=CHAR},
        #{emp.contractTerm,jdbcType=DOUBLE}, #{emp.conversionTime,jdbcType=DATE}, #{emp.notWorkDate,jdbcType=DATE},
        #{emp.beginContract,jdbcType=DATE}, #{emp.endContract,jdbcType=DATE}, #{emp.workAge,jdbcType=INTEGER}
        )
      </foreach>
  </insert>

  <!--插入职工信息-->
  <insert id="insert" parameterType="com.human.pojo.emp.Employee" >
    insert into employee (id, name, gender, 
      birthday, idCard, wedlock, nationId, 
      nativePlace, politicId, email, 
      phone, address, departmentId, 
      jobLevelId, posId, engageForm, 
      tiptopDegree, specialty, school, 
      beginDate, workState, workID, 
      contractTerm, conversionTime, notWorkDate, 
      beginContract, endContract, workAge
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{birthday,jdbcType=DATE}, #{idCard,jdbcType=CHAR}, #{wedlock,jdbcType=CHAR}, #{nationId,jdbcType=INTEGER}, 
      #{nativePlace,jdbcType=VARCHAR}, #{politicId,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER}, 
      #{jobLevelId,jdbcType=INTEGER}, #{posId,jdbcType=INTEGER}, #{engageForm,jdbcType=VARCHAR}, 
      #{tiptopDegree,jdbcType=CHAR}, #{specialty,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, 
      #{beginDate,jdbcType=DATE}, #{workState,jdbcType=CHAR}, #{workID,jdbcType=CHAR}, 
      #{contractTerm,jdbcType=DOUBLE}, #{conversionTime,jdbcType=DATE}, #{notWorkDate,jdbcType=DATE}, 
      #{beginContract,jdbcType=DATE}, #{endContract,jdbcType=DATE}, #{workAge,jdbcType=INTEGER}
      )
  </insert>

  <!--插入职工实体-->
  <insert id="insertSelective" parameterType="com.human.pojo.emp.Employee"
          useGeneratedKeys="true" keyProperty="id">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="idCard != null" >
        idCard,
      </if>
      <if test="wedlock != null" >
        wedlock,
      </if>
      <if test="nationId != null" >
        nationId,
      </if>
      <if test="nativePlace != null" >
        nativePlace,
      </if>
      <if test="politicId != null" >
        politicId,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="departmentId != null" >
        departmentId,
      </if>
      <if test="jobLevelId != null" >
        jobLevelId,
      </if>
      <if test="posId != null" >
        posId,
      </if>
      <if test="engageForm != null" >
        engageForm,
      </if>
      <if test="tiptopDegree != null" >
        tiptopDegree,
      </if>
      <if test="specialty != null" >
        specialty,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="beginDate != null" >
        beginDate,
      </if>
      <if test="workState != null" >
        workState,
      </if>
      <if test="workID != null" >
        workID,
      </if>
      <if test="contractTerm != null" >
        contractTerm,
      </if>
      <if test="conversionTime != null" >
        conversionTime,
      </if>
      <if test="notWorkDate != null" >
        notWorkDate,
      </if>
      <if test="beginContract != null" >
        beginContract,
      </if>
      <if test="endContract != null" >
        endContract,
      </if>
      <if test="workAge != null" >
        workAge,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="idCard != null" >
        #{idCard,jdbcType=CHAR},
      </if>
      <if test="wedlock != null" >
        #{wedlock,jdbcType=CHAR},
      </if>
      <if test="nationId != null" >
        #{nationId,jdbcType=INTEGER},
      </if>
      <if test="nativePlace != null" >
        #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="politicId != null" >
        #{politicId,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="jobLevelId != null" >
        #{jobLevelId,jdbcType=INTEGER},
      </if>
      <if test="posId != null" >
        #{posId,jdbcType=INTEGER},
      </if>
      <if test="engageForm != null" >
        #{engageForm,jdbcType=VARCHAR},
      </if>
      <if test="tiptopDegree != null" >
        #{tiptopDegree,jdbcType=CHAR},
      </if>
      <if test="specialty != null" >
        #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="beginDate != null" >
        #{beginDate,jdbcType=DATE},
      </if>
      <if test="workState != null" >
        #{workState,jdbcType=CHAR},
      </if>
      <if test="workID != null" >
        #{workID,jdbcType=CHAR},
      </if>
      <if test="contractTerm != null" >
        #{contractTerm,jdbcType=DOUBLE},
      </if>
      <if test="conversionTime != null" >
        #{conversionTime,jdbcType=DATE},
      </if>
      <if test="notWorkDate != null" >
        #{notWorkDate,jdbcType=DATE},
      </if>
      <if test="beginContract != null" >
        #{beginContract,jdbcType=DATE},
      </if>
      <if test="endContract != null" >
        #{endContract,jdbcType=DATE},
      </if>
      <if test="workAge != null" >
        #{workAge,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.human.pojo.emp.Employee" >
    update employee
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="idCard != null" >
        idCard = #{idCard,jdbcType=CHAR},
      </if>
      <if test="wedlock != null" >
        wedlock = #{wedlock,jdbcType=CHAR},
      </if>
      <if test="nationId != null" >
        nationId = #{nationId,jdbcType=INTEGER},
      </if>
      <if test="nativePlace != null" >
        nativePlace = #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="politicId != null" >
        politicId = #{politicId,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        departmentId = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="jobLevelId != null" >
        jobLevelId = #{jobLevelId,jdbcType=INTEGER},
      </if>
      <if test="posId != null" >
        posId = #{posId,jdbcType=INTEGER},
      </if>
      <if test="engageForm != null" >
        engageForm = #{engageForm,jdbcType=VARCHAR},
      </if>
      <if test="tiptopDegree != null" >
        tiptopDegree = #{tiptopDegree,jdbcType=CHAR},
      </if>
      <if test="specialty != null" >
        specialty = #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="beginDate != null" >
        beginDate = #{beginDate,jdbcType=DATE},
      </if>
      <if test="workState != null" >
        workState = #{workState,jdbcType=CHAR},
      </if>
      <if test="workID != null" >
        workID = #{workID,jdbcType=CHAR},
      </if>
      <if test="contractTerm != null" >
        contractTerm = #{contractTerm,jdbcType=DOUBLE},
      </if>
      <if test="conversionTime != null" >
        conversionTime = #{conversionTime,jdbcType=DATE},
      </if>
      <if test="notWorkDate != null" >
        notWorkDate = #{notWorkDate,jdbcType=DATE},
      </if>
      <if test="beginContract != null" >
        beginContract = #{beginContract,jdbcType=DATE},
      </if>
      <if test="endContract != null" >
        endContract = #{endContract,jdbcType=DATE},
      </if>
      <if test="workAge != null" >
        workAge = #{workAge,jdbcType=INTEGER},
      </if>
      <if test="imgUrl != null" >
        imgUrl = #{imgUrl,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.human.pojo.emp.Employee" >
    update employee
    set name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=DATE},
      idCard = #{idCard,jdbcType=CHAR},
      wedlock = #{wedlock,jdbcType=CHAR},
      nationId = #{nationId,jdbcType=INTEGER},
      nativePlace = #{nativePlace,jdbcType=VARCHAR},
      politicId = #{politicId,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      departmentId = #{departmentId,jdbcType=INTEGER},
      jobLevelId = #{jobLevelId,jdbcType=INTEGER},
      posId = #{posId,jdbcType=INTEGER},
      engageForm = #{engageForm,jdbcType=VARCHAR},
      tiptopDegree = #{tiptopDegree,jdbcType=CHAR},
      specialty = #{specialty,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      beginDate = #{beginDate,jdbcType=DATE},
      workState = #{workState,jdbcType=CHAR},
      workID = #{workID,jdbcType=CHAR},
      contractTerm = #{contractTerm,jdbcType=DOUBLE},
      conversionTime = #{conversionTime,jdbcType=DATE},
      notWorkDate = #{notWorkDate,jdbcType=DATE},
      beginContract = #{beginContract,jdbcType=DATE},
      endContract = #{endContract,jdbcType=DATE},
      workAge = #{workAge,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>